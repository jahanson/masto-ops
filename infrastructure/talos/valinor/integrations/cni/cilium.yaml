# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: valinor
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: valinor\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRU2tEcnpBU3l0WStySkpTNS80TThEekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFMk1qTTBORFE0V2hjTk1qWXdOakUxTWpNMApORFE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZTOGdMZGdyUjNvTlRnLzhOcW9HckRmbFh6RXN4K1JrY2ZkQUU1OTM2eFB0aHZROUkKaGlaQndvbXprQWFyVlJkQjVVeEU4LzBkdENJdkI4MWhNQkJCVzhMckFxNUdTODhOM3VXM04wMEpZQXZMcXVKcAp6RzZPTy8xeFFCMURNTnJnNEQ5MzFSMlBNbVBkZ2RqemhaY2p2VVQ5Z0FBeHh4cU12RDYrWlpDazJoU0phMS96ClM3NkF5NTRpdFB1aE9DOWlBTFVoczI1eStFM3ErRC9DSHNVOHdjTHN1aWpLd1VtbzhjOFMvSm1VV3BYcUtRWU4KRGMwV09wQjZIWE5RVnRuNjF6MlJsQzl4aEVaSW4yUVVCamFxbkpIeE9CaHFWSklLUlh0c0tJVzI4c1Q4cUp0MwpkYmx4WG5hV3B0VitJUmErWWE0alFmYS94Smd2RnM2QTVqSnRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYSDJuTGl5dGp0aWdjVmNTd3lYd0pMczZudlV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDWUE0Ukx6OGdMclBueVkrRkxtYW56Mm5icFUvUEFtRVBjdVlDOUlBQko1UjZ2NVM1MnBIZXozCnJ6T1J0V1VYd3JDUGpjUVJSdXdEY2VCNDI5bG9MSmFxTEZ3V3hCVnY1V1dWM1pvUFZCY1cwS1VxVnRhUWMycjgKZFBmWUVxTnFIMHFuakxHalpJU2dySmNZc1U5M09EUlVFTDhWVE03TGVpZ0RKRkZOMnJrZ2ZUQ3k0NDRjaDJjUQpIWU9yck5XZDllZ1RwcWtsOWdMTFlFUnRhcDdQRXM0Z0QvWWhFVEI4VjNPcEhmeU90U29QYnFaN0RsRyt3RW0xCm5jK1lYcUtMSE9MUjI4bHNycUdZVTBnYmw1aW1ONmpqOWdSTEphVXNua2U0K0hXR2d0YnVZZkdvejVlaXdyeisKaWp2VUIvWkorSWRKWXkvMS9xbGpicmdWNjRJM1FVST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeFV2SUMzWUswZDZEVTRQL0RhcUJxdzM1Vjh4TE1ma1pISDNRQk9mZCtzVDdZYjBQClNJWW1RY0tKczVBR3ExVVhRZVZNUlBQOUhiUWlMd2ZOWVRBUVFWdkM2d0t1Umt2UERkN2x0emROQ1dBTHk2cmkKYWN4dWpqdjljVUFkUXpEYTRPQS9kOVVkanpKajNZSFk4NFdYSTcxRS9ZQUFNY2Nhakx3K3ZtV1FwTm9VaVd0Zgo4MHUrZ011ZUlyVDdvVGd2WWdDMUliTnVjdmhONnZnL3doN0ZQTUhDN0xvb3lzRkpxUEhQRXZ5WmxGcVY2aWtHCkRRM05GanFRZWgxelVGYlordGM5a1pRdmNZUkdTSjlrRkFZMnFweVI4VGdZYWxTU0NrVjdiQ2lGdHZMRS9LaWIKZDNXNWNWNTJscWJWZmlFV3ZtR3VJMEgydjhTWUx4Yk9nT1l5YlFJREFRQUJBb0lCQVFDQityTUlHZlIyMzBsVgp0QmhNUUpDOHlMQUVqNnJhZVdsNXc4bFA4aEhrSy9JUktpVHZlckdwa1NoM0MrUFk3RzR1RTRwend1cDJyejMyCkRnWFlpWG1zRlhBTXMrOXNrSFVRaGxDQXJBWXNyd0lXWTdaV1RVQm9wRTBNVjFqdjh6ZS8vdnpSVGEzenNSYnAKejZuR2hiUlU3MVNNVGMvUys0RWFSc3B2VlNvOTcrV0NLSFFPWXFYcGkzMlFnM2FJR0FYallINURNMVZjajBIWgpja0kzTytSRFhjRTBFQTc1dXN6aXZzMGRIa3NwL2dhNVZqbFRaT29BVWFhaUlzbHFSeUM1NWRibVNhRk9xVjdZCmwyc1BLdXkxV09CMjdCRUsxdTR5YXEvRktQUFhtc2puWkJxeXBRVHllWEFCbkVpWkFLSjczZE1tNU83VytQUEsKQ1cwYjJDZGhBb0dCQVBRNW43ZnFqRFJ3VHZFTS9VSnk4YTlxWlh4UDY3RGFEZmVaSEptaDFjMGJ5WjdnbW5mNwp6QjkwaUpmem0xOTlCempuVFBIWldha2tuMVhzL1VzVWpJUGRsc2t1TnlyL3BpRENFZHk2M3ZCanVEZ1NqTGwzCituUVQvaXNNYlFtOXZNM3I3TmlWZTdQZkN3ZW5iTFRFUkxWLy9hVmQ5bHRxcm83bFkyQ3FpbEtiQW9HQkFNN08KN2hxWDlWbms3enZpVnordWkzc0RrYm00OW9ISXM0TmdyaStJYWRIeThsT28rdEVOZ3lSdXIyc0tEOVF6b3ZQeQovTXJjR3B6ZWErVmluZFhuN0p6NVpuM2wyYmtlUmdxU1U2TkxqVWdUNmo3dHVmc093OWM2OVJrcGRyOHZEbWIvCkFzMzlXUHlQNnBjTG5VeDUzWXVISnY0cU85OUlJMDBsMjRRQlRYdVhBb0dBUVp2eFluRXFOVFF1b09kQ2FrV0MKMUFNYlBHZ2tBeUN4TytEd0kvMnIrQ3dNNEJlcXA2MEhTelA5TmdVRnFvTm1HMDFZQ0dqQmc0VUpJUVpIalpINQpwYnN6dE53cmlldWY3NUR6UjM4VVFUUW8yemR3Z3FyT3A3eHZQWlZhL1pEeFZjaVptaDJlVzlZQm1vN0p6MDRpCnZ6ZWhKbm0xb3gxbnc0K3dRTm5QeXgwQ2dZRUFxSHZOWDcwTkZmOTlKN3h1ZUdNckh6ejVLK1dVYm9la09CUTcKMUYyK1dGMGxMeU1yczhUZVlvQUtTWm9ZNnpobU9YaHNtcGhXMWhZZXNQSjJ4QjMrbHFSWTY1aW1tRG9odGRzZwphSmpVc1RRSVV0dzUrRjgvRGNucWhHVlRhTTVkWFd2RVRTMXBvZGxkdFZDeEJlMENvUG1xdXNhTm9JcVV0L1Z2CnNVdWVaR0VDZ1lFQWx2NStITndzS1hRbVJDaHd0SWUva2p1bnRPNjFZVzNjTDBmRzJCTUFNVW10bjRTNFZ3eDAKT21hTm9hT3FCWWdlWEhDb3gyVmRxVHo5OU5jQTIzNVhWS0FEQmg2dlFoZjJFQ0I4U0IvZEVGSGN1WUdWd2xiTgpUN0orN1FWQVhOQmkxY1o1YUhNK0FCcEFpdjBUeEloUXAxME5uRW1rZlJCZTdOdlJQcW44MEFBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRU2tEcnpBU3l0WStySkpTNS80TThEekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFMk1qTTBORFE0V2hjTk1qWXdOakUxTWpNMApORFE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZTOGdMZGdyUjNvTlRnLzhOcW9HckRmbFh6RXN4K1JrY2ZkQUU1OTM2eFB0aHZROUkKaGlaQndvbXprQWFyVlJkQjVVeEU4LzBkdENJdkI4MWhNQkJCVzhMckFxNUdTODhOM3VXM04wMEpZQXZMcXVKcAp6RzZPTy8xeFFCMURNTnJnNEQ5MzFSMlBNbVBkZ2RqemhaY2p2VVQ5Z0FBeHh4cU12RDYrWlpDazJoU0phMS96ClM3NkF5NTRpdFB1aE9DOWlBTFVoczI1eStFM3ErRC9DSHNVOHdjTHN1aWpLd1VtbzhjOFMvSm1VV3BYcUtRWU4KRGMwV09wQjZIWE5RVnRuNjF6MlJsQzl4aEVaSW4yUVVCamFxbkpIeE9CaHFWSklLUlh0c0tJVzI4c1Q4cUp0MwpkYmx4WG5hV3B0VitJUmErWWE0alFmYS94Smd2RnM2QTVqSnRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYSDJuTGl5dGp0aWdjVmNTd3lYd0pMczZudlV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDWUE0Ukx6OGdMclBueVkrRkxtYW56Mm5icFUvUEFtRVBjdVlDOUlBQko1UjZ2NVM1MnBIZXozCnJ6T1J0V1VYd3JDUGpjUVJSdXdEY2VCNDI5bG9MSmFxTEZ3V3hCVnY1V1dWM1pvUFZCY1cwS1VxVnRhUWMycjgKZFBmWUVxTnFIMHFuakxHalpJU2dySmNZc1U5M09EUlVFTDhWVE03TGVpZ0RKRkZOMnJrZ2ZUQ3k0NDRjaDJjUQpIWU9yck5XZDllZ1RwcWtsOWdMTFlFUnRhcDdQRXM0Z0QvWWhFVEI4VjNPcEhmeU90U29QYnFaN0RsRyt3RW0xCm5jK1lYcUtMSE9MUjI4bHNycUdZVTBnYmw1aW1ONmpqOWdSTEphVXNua2U0K0hXR2d0YnVZZkdvejVlaXdyeisKaWp2VUIvWkorSWRKWXkvMS9xbGpicmdWNjRJM1FVST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeFV2SUMzWUswZDZEVTRQL0RhcUJxdzM1Vjh4TE1ma1pISDNRQk9mZCtzVDdZYjBQClNJWW1RY0tKczVBR3ExVVhRZVZNUlBQOUhiUWlMd2ZOWVRBUVFWdkM2d0t1Umt2UERkN2x0emROQ1dBTHk2cmkKYWN4dWpqdjljVUFkUXpEYTRPQS9kOVVkanpKajNZSFk4NFdYSTcxRS9ZQUFNY2Nhakx3K3ZtV1FwTm9VaVd0Zgo4MHUrZ011ZUlyVDdvVGd2WWdDMUliTnVjdmhONnZnL3doN0ZQTUhDN0xvb3lzRkpxUEhQRXZ5WmxGcVY2aWtHCkRRM05GanFRZWgxelVGYlordGM5a1pRdmNZUkdTSjlrRkFZMnFweVI4VGdZYWxTU0NrVjdiQ2lGdHZMRS9LaWIKZDNXNWNWNTJscWJWZmlFV3ZtR3VJMEgydjhTWUx4Yk9nT1l5YlFJREFRQUJBb0lCQVFDQityTUlHZlIyMzBsVgp0QmhNUUpDOHlMQUVqNnJhZVdsNXc4bFA4aEhrSy9JUktpVHZlckdwa1NoM0MrUFk3RzR1RTRwend1cDJyejMyCkRnWFlpWG1zRlhBTXMrOXNrSFVRaGxDQXJBWXNyd0lXWTdaV1RVQm9wRTBNVjFqdjh6ZS8vdnpSVGEzenNSYnAKejZuR2hiUlU3MVNNVGMvUys0RWFSc3B2VlNvOTcrV0NLSFFPWXFYcGkzMlFnM2FJR0FYallINURNMVZjajBIWgpja0kzTytSRFhjRTBFQTc1dXN6aXZzMGRIa3NwL2dhNVZqbFRaT29BVWFhaUlzbHFSeUM1NWRibVNhRk9xVjdZCmwyc1BLdXkxV09CMjdCRUsxdTR5YXEvRktQUFhtc2puWkJxeXBRVHllWEFCbkVpWkFLSjczZE1tNU83VytQUEsKQ1cwYjJDZGhBb0dCQVBRNW43ZnFqRFJ3VHZFTS9VSnk4YTlxWlh4UDY3RGFEZmVaSEptaDFjMGJ5WjdnbW5mNwp6QjkwaUpmem0xOTlCempuVFBIWldha2tuMVhzL1VzVWpJUGRsc2t1TnlyL3BpRENFZHk2M3ZCanVEZ1NqTGwzCituUVQvaXNNYlFtOXZNM3I3TmlWZTdQZkN3ZW5iTFRFUkxWLy9hVmQ5bHRxcm83bFkyQ3FpbEtiQW9HQkFNN08KN2hxWDlWbms3enZpVnordWkzc0RrYm00OW9ISXM0TmdyaStJYWRIeThsT28rdEVOZ3lSdXIyc0tEOVF6b3ZQeQovTXJjR3B6ZWErVmluZFhuN0p6NVpuM2wyYmtlUmdxU1U2TkxqVWdUNmo3dHVmc093OWM2OVJrcGRyOHZEbWIvCkFzMzlXUHlQNnBjTG5VeDUzWXVISnY0cU85OUlJMDBsMjRRQlRYdVhBb0dBUVp2eFluRXFOVFF1b09kQ2FrV0MKMUFNYlBHZ2tBeUN4TytEd0kvMnIrQ3dNNEJlcXA2MEhTelA5TmdVRnFvTm1HMDFZQ0dqQmc0VUpJUVpIalpINQpwYnN6dE53cmlldWY3NUR6UjM4VVFUUW8yemR3Z3FyT3A3eHZQWlZhL1pEeFZjaVptaDJlVzlZQm1vN0p6MDRpCnZ6ZWhKbm0xb3gxbnc0K3dRTm5QeXgwQ2dZRUFxSHZOWDcwTkZmOTlKN3h1ZUdNckh6ejVLK1dVYm9la09CUTcKMUYyK1dGMGxMeU1yczhUZVlvQUtTWm9ZNnpobU9YaHNtcGhXMWhZZXNQSjJ4QjMrbHFSWTY1aW1tRG9odGRzZwphSmpVc1RRSVV0dzUrRjgvRGNucWhHVlRhTTVkWFd2RVRTMXBvZGxkdFZDeEJlMENvUG1xdXNhTm9JcVV0L1Z2CnNVdWVaR0VDZ1lFQWx2NStITndzS1hRbVJDaHd0SWUva2p1bnRPNjFZVzNjTDBmRzJCTUFNVW10bjRTNFZ3eDAKT21hTm9hT3FCWWdlWEhDb3gyVmRxVHo5OU5jQTIzNVhWS0FEQmg2dlFoZjJFQ0I4U0IvZEVGSGN1WUdWd2xiTgpUN0orN1FWQVhOQmkxY1o1YUhNK0FCcEFpdjBUeEloUXAxME5uRW1rZlJCZTdOdlJQcW44MEFBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRU2tEcnpBU3l0WStySkpTNS80TThEekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFMk1qTTBORFE0V2hjTk1qWXdOakUxTWpNMApORFE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZTOGdMZGdyUjNvTlRnLzhOcW9HckRmbFh6RXN4K1JrY2ZkQUU1OTM2eFB0aHZROUkKaGlaQndvbXprQWFyVlJkQjVVeEU4LzBkdENJdkI4MWhNQkJCVzhMckFxNUdTODhOM3VXM04wMEpZQXZMcXVKcAp6RzZPTy8xeFFCMURNTnJnNEQ5MzFSMlBNbVBkZ2RqemhaY2p2VVQ5Z0FBeHh4cU12RDYrWlpDazJoU0phMS96ClM3NkF5NTRpdFB1aE9DOWlBTFVoczI1eStFM3ErRC9DSHNVOHdjTHN1aWpLd1VtbzhjOFMvSm1VV3BYcUtRWU4KRGMwV09wQjZIWE5RVnRuNjF6MlJsQzl4aEVaSW4yUVVCamFxbkpIeE9CaHFWSklLUlh0c0tJVzI4c1Q4cUp0MwpkYmx4WG5hV3B0VitJUmErWWE0alFmYS94Smd2RnM2QTVqSnRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYSDJuTGl5dGp0aWdjVmNTd3lYd0pMczZudlV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDWUE0Ukx6OGdMclBueVkrRkxtYW56Mm5icFUvUEFtRVBjdVlDOUlBQko1UjZ2NVM1MnBIZXozCnJ6T1J0V1VYd3JDUGpjUVJSdXdEY2VCNDI5bG9MSmFxTEZ3V3hCVnY1V1dWM1pvUFZCY1cwS1VxVnRhUWMycjgKZFBmWUVxTnFIMHFuakxHalpJU2dySmNZc1U5M09EUlVFTDhWVE03TGVpZ0RKRkZOMnJrZ2ZUQ3k0NDRjaDJjUQpIWU9yck5XZDllZ1RwcWtsOWdMTFlFUnRhcDdQRXM0Z0QvWWhFVEI4VjNPcEhmeU90U29QYnFaN0RsRyt3RW0xCm5jK1lYcUtMSE9MUjI4bHNycUdZVTBnYmw1aW1ONmpqOWdSTEphVXNua2U0K0hXR2d0YnVZZkdvejVlaXdyeisKaWp2VUIvWkorSWRKWXkvMS9xbGpicmdWNjRJM1FVST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtOV0FrcGZiNHExWDVEQllkZlVueUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE5qSXpORFEwT1ZvWERUSTJNRFl4TlRJegpORFEwT1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJvN21vZmd2bGFycW8zVEU5OVVodlI1cmhvdDUKdW9oTkVxeEU5SjduUFVrbnNTS1JOaGVkWmd4aVYwMkxnVkdNckN4TTlMVzZhSGJySnEzemdTUXRHVXIzOU92MwpCYThpeFErNXJDMnFBYWpGZEp5UG1hK0VWSzBNQ084bnZwbU5pNm84SGVBa3RBSUJ2S2dyYjdjdjNOdjdMVDMvCis0bzhja1o1ZVBBWXBreHNOL0hMandZWEQyejBjL3EzdzltUnVzK3g0S2wwU09vbEtKZk81ak54NDJqK2xLTFcKbHZSSC9Za25zT1JRRWJ0VUdVUEMyc0pMSUJNOGFEWGVScUFqOS84N24vYk9jdmIwSTc0YXErbzFRYW9QNFhubApKWnpyTStHQ01yd2JpSGlYN1Z2VW4zbTJLUjUza2prUVJaWkRQelJwaUQvbHVQMERwajNDQmJ5enJ3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmNmYWN1TEsyTzJLQnhWeExESmZBawp1enFlOVRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSTFKSVNiTytrNFBQK0JOMkJLRXhYalBBNlRab3VySGRmTzk0VFhnV0dqM0ZicTkKQW42QmlYcFlBWGI0SGNFdUxNSU1xRk1LWjhjNTBPT1RsWlo2ZlJ5RkNvRU0va3FrSEVsR3J1b21pcXJiVGdMdQoxeUhOaGZqUUt2LzBGZ2JKT1NwZ0pvRUJQbWgveGdqeExzMkwzay9LWkJNNlg0cmhvRmE5Z01mYnl2YmZxMThLCk41ZlJudGxzRzNvYWJ3VnRsMzlsT0wydGNxQ1NEMGpUbmVGMjZHbWRyVE5MT1d3dWl4RHZtMnJDVkNmRGNwVFEKMW51Q2FiRkFBNkxhcXNFT0VkSUxHU1BWd1FZd2dYZmt4TU5DNytPRXdoZ0xlTTZhU1VvR1YwMkRlcEY0cE1vTgpmNFNoNTFDVXJUZFNGbDduU0lJTDlYWmxCZ3dVc2wySGQ0ajB2cHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcm83bW9mZ3ZsYXJxbzNURTk5VWh2UjVyaG90NXVvaE5FcXhFOUo3blBVa25zU0tSCk5oZWRaZ3hpVjAyTGdWR01yQ3hNOUxXNmFIYnJKcTN6Z1NRdEdVcjM5T3YzQmE4aXhRKzVyQzJxQWFqRmRKeVAKbWErRVZLME1DTzhudnBtTmk2bzhIZUFrdEFJQnZLZ3JiN2N2M052N0xUMy8rNG84Y2taNWVQQVlwa3hzTi9ITApqd1lYRDJ6MGMvcTN3OW1SdXMreDRLbDBTT29sS0pmTzVqTng0MmorbEtMV2x2UkgvWWtuc09SUUVidFVHVVBDCjJzSkxJQk04YURYZVJxQWo5Lzg3bi9iT2N2YjBJNzRhcStvMVFhb1A0WG5sSlp6ck0rR0NNcndiaUhpWDdWdlUKbjNtMktSNTNramtRUlpaRFB6UnBpRC9sdVAwRHBqM0NCYnl6cndJREFRQUJBb0lCQUNPSXFZQmRRbXFJUVgyRwp2clhvcUJhVWc3VCszWWZRU1VnODAwaXN0RXZ3Z1dqNHJYRENlK01UTUUydlZtKzd4eFFoYklVQUhYTTRpZ1AwCnN6WWR4Q1I2ODJEalRBVFhNdy9FZExxTkRTZUxVSzY5VkNvbjVadExJc0VLMWg5aHFNTytvc0ErS1pxUE1nVlMKZ28wYVVGNzRWUGhQdjdWWDNaZ3hxbmFwQVl1UWV3Q3RkSGEzcXhMY1hkTmhBZ0RHM21RVllJTWZMdlNoVURragpiMkdNOGkxcXc3N2RwdDJWanVqRG9YVkdnb1FpOFRmVmViT0pTVndhL3dXbHBKNlAwWnpqZUM0UkwxZVpOY05nClArVkl6WGVUdUFYZEN2UFFoeE1sRy9RY2o4QjdIRFdLMExRY0todEo5VmRMRUlkQ05CSno2ZHZiS0hHNHBwcVcKREJBTkVIRUNnWUVBME1QYXFoVHM5bllWaW5uTUZwYmpPS0Rrc2VVZXdyRklSdUZUaU1FUkVGd2s2SWxERnBXdQp1NG1OTEw4VFozZlExdGJTaysxVXlRTDVmd3owUVZRcWQ3cGIrcGlteUh0UHJrOURPWk5SdkdvMUpDYWRLdVdvCjl0T1VWVk1aeERRRFpYZUlCVUIxS0kxQUQwVjNGaVVtdXJDTVZYQm94TUtHZjRRaHN6MEtXRGNDZ1lFQTFnMjEKWERyeDJmNGREQkpFZW42cjMxa2hnUjFndE85Tk1LK3pHWGt4NUJCZlN2NXUyMTBvMVIyUTVzeElkYmxERHdyYgppWmhZR0duUHF2WUtlbUpEN29HQjYrVmhKclU2MURoVzBXaVAwcFRGZ01KcjRYbU1qQ0Q1YnNpUElyYUVIT1lHCldWeEd1MVBWQi9kbHZUYjMrdFdLZHNSb0NiOFU3eHR3UkFNazFFa0NnWUVBZ2dpTVNnWnd0dTlFYVpXRjFzZ3oKVGRHQndZRGFVU0RGeVVpT2xJN1ZSeUJ0Nk4yZWlSSEEzWlZHOXdrcFYvaGNmNFVkY3dDUUlBaVhTVmpUUjJIYQpkZXNCWWF6MXJjaUpFQ1RVMWFiNmNXYWlKUnRjS0IwV3ltOXRaRnczbjJ0YWRqZ201RWFLOHpCUUozTDRRelh1CjByZ25JUXk4WlZwWkZsSkIvM2ZVMnE4Q2dZRUF6eFZtRHJ0ci9YVE5UejloQm8wRDVFbExrNmtEUlNoNktnN2gKRzFUWHdvZGdXYUk3UjNnaUo4TzV5cjk1bm9MRDhJcVZoOUZkOFFoMUF6V1RQNEZQclMrWHJNczJLUWVOeVlCVAo1YlhkNW1GTmpkc0tHWkhKT2t3d1pGQWR3ZnlIWlpuWUxKMk1SSEMvR1R6c0xaay9ZV2t6MHVFQ3NlTXQ4b0UrCkpGNVNSQmtDZ1lBM3Q0M3VwcmtSOE9lMnoxVkhhQ1NZRG8zUUUzOSt1L3RnOFFjaU4rcmlCWlc2aTgwczZPM2oKT1ZWVER5MmJsbG5GWWJlTnoxWngyMUI0SlU1NFozTTNFbWlaRFVsaDZ5aTJlRHYwRGFPbXk5WDFjY3pscEFGdQpuU09WWWRpaEp4ZE40anNiZ25ZdmF5TkQ3d3JEam1FbGYvS3k5VURVaW1zc2JqZGtJQUJYWGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRU2tEcnpBU3l0WStySkpTNS80TThEekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFMk1qTTBORFE0V2hjTk1qWXdOakUxTWpNMApORFE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZTOGdMZGdyUjNvTlRnLzhOcW9HckRmbFh6RXN4K1JrY2ZkQUU1OTM2eFB0aHZROUkKaGlaQndvbXprQWFyVlJkQjVVeEU4LzBkdENJdkI4MWhNQkJCVzhMckFxNUdTODhOM3VXM04wMEpZQXZMcXVKcAp6RzZPTy8xeFFCMURNTnJnNEQ5MzFSMlBNbVBkZ2RqemhaY2p2VVQ5Z0FBeHh4cU12RDYrWlpDazJoU0phMS96ClM3NkF5NTRpdFB1aE9DOWlBTFVoczI1eStFM3ErRC9DSHNVOHdjTHN1aWpLd1VtbzhjOFMvSm1VV3BYcUtRWU4KRGMwV09wQjZIWE5RVnRuNjF6MlJsQzl4aEVaSW4yUVVCamFxbkpIeE9CaHFWSklLUlh0c0tJVzI4c1Q4cUp0MwpkYmx4WG5hV3B0VitJUmErWWE0alFmYS94Smd2RnM2QTVqSnRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYSDJuTGl5dGp0aWdjVmNTd3lYd0pMczZudlV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDWUE0Ukx6OGdMclBueVkrRkxtYW56Mm5icFUvUEFtRVBjdVlDOUlBQko1UjZ2NVM1MnBIZXozCnJ6T1J0V1VYd3JDUGpjUVJSdXdEY2VCNDI5bG9MSmFxTEZ3V3hCVnY1V1dWM1pvUFZCY1cwS1VxVnRhUWMycjgKZFBmWUVxTnFIMHFuakxHalpJU2dySmNZc1U5M09EUlVFTDhWVE03TGVpZ0RKRkZOMnJrZ2ZUQ3k0NDRjaDJjUQpIWU9yck5XZDllZ1RwcWtsOWdMTFlFUnRhcDdQRXM0Z0QvWWhFVEI4VjNPcEhmeU90U29QYnFaN0RsRyt3RW0xCm5jK1lYcUtMSE9MUjI4bHNycUdZVTBnYmw1aW1ONmpqOWdSTEphVXNua2U0K0hXR2d0YnVZZkdvejVlaXdyeisKaWp2VUIvWkorSWRKWXkvMS9xbGpicmdWNjRJM1FVST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRREZvN3pEcDFjSUxaaWFHdkJ3OGpvakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFMk1qTTBORFE1V2hjTk1qWXdOakUxTWpNMApORFE1V2pBcU1TZ3dKZ1lEVlFRRERCOHFMblpoYkdsdWIzSXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeVdyR2todDNuc1lUTURBWjhCMHEKYWtrK2UrRHRlLzVKK2JHWi9IVEVIQkFEMmF2RkpOT1hCanBVQW9sY0xTL2E3NnR0elpRNmV5VmlTSkc5dkJYdAo3Sk5kbG9sVFkvRjFiS3dMbkREOFpnNUJIYVQxL0lCKzRsR3lRODY5NnJzbU1vVnE5Y2JMVWpLcWEvSzE2RUFECjNtNGN2L21ZWDE2RjlYN2xVNWw3NklxWmNOOEo0Lys0Zlo3ZW9PNHJ2K0ltYTRzZ3pyYWIxc0F3cVJWK2NuVTYKSVlMcGN4ZjhBeG84YmJaNUwvekdaTjhMeUdIY05tM3JHT2wzeEVBSUxoN1lLZCtBZ1V5Q2dla2dDUWtxbi8zZQo0a0N4YjRZRUw1YXNaVWEyejRKRmQ1a1FFRStUb0JtL2VRbFJvdHB5dHZmdGt5OEdVdTZiTGpZY3VJc1RtdVhuCjVRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSY2ZhY3VMSzJPMktCeApWeExESmZBa3V6cWU5VEFxQmdOVkhSRUVJekFoZ2g4cUxuWmhiR2x1YjNJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDT1RwM2JweW1ubDJ6QnBsMzQyMkdXa3daOXpTRWEKNWxlQ1ZUUnFFbFMwZ0JyY2sweUkwSjhwR0lPR0k0R0dzQzRGVmlvaVJLNGhEakYxSnc4M01saDVlbjVYeGxNMApIczQxM2Zhb2V1RGZHS2VpMkdKd0kxWlA4TUt1UGZwLzJmZWM1WVlkWDVrVEtaSjJ2TTJod2poSTJaZGM5U0xMCld5RkM3dWdMeDBFZmhpMndRNWMwbHpGZ3lVTFQvTTcxaTk3MG5qVzVLY3ZIaGdWdmozMTNaWk4zeVNGd083SkgKOWFxc3hoQXM1Q1dCRTROYWZDWXlYWmh3NS9xQU4waVpwMEV4N0xLc0locnZld0w4QUNaYnN4V0krc2c1L2pWMgpuMmRDS3FacW1DSzlwQ0dDMmdzV1hxYkEwYjVWYXgzTEpidGNlWHppVVZRVVBZNi90d0lvU1ZjVQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVdyR2todDNuc1lUTURBWjhCMHFha2srZStEdGUvNUorYkdaL0hURUhCQUQyYXZGCkpOT1hCanBVQW9sY0xTL2E3NnR0elpRNmV5VmlTSkc5dkJYdDdKTmRsb2xUWS9GMWJLd0xuREQ4Wmc1QkhhVDEKL0lCKzRsR3lRODY5NnJzbU1vVnE5Y2JMVWpLcWEvSzE2RUFEM200Y3YvbVlYMTZGOVg3bFU1bDc2SXFaY044Sgo0Lys0Zlo3ZW9PNHJ2K0ltYTRzZ3pyYWIxc0F3cVJWK2NuVTZJWUxwY3hmOEF4bzhiYlo1TC96R1pOOEx5R0hjCk5tM3JHT2wzeEVBSUxoN1lLZCtBZ1V5Q2dla2dDUWtxbi8zZTRrQ3hiNFlFTDVhc1pVYTJ6NEpGZDVrUUVFK1QKb0JtL2VRbFJvdHB5dHZmdGt5OEdVdTZiTGpZY3VJc1RtdVhuNVFJREFRQUJBb0lCQUhBOExwQmwrOThla3J5cwpZUmU2dU5Mbkk0bFdDaCtvMEVIeUpGTllJWnRkbFRlckRyejVwdE5TbDFPZWhSMnM1L3ZiYytFMWN1MENKT1U1ClNSZlF4SGFxbTJEeC91VFhQTTZraEFleUNFTTZPREN6cGxyZ28xT3JvSUZHWisrdi81WHhZR3U2TGJ3TS9ZZ1AKaEN2NTErNFBQN2Y5OWxsV1M2RkQ1N2dRODhuY3l2Sk4vTU5QYTRTQnlSek1zNUFRUkJPdkhoL3ZIZGtiOW9UbgpMWjRBZUEzOVZOZllVd2VvTUJzblk5Zy9hVTBCdjBHTnVBRzBERGlrc2ZKSnVrS2JjL0g0dkI5VFlaOU4xaWRoCm8zUFNMdzV4WTV1NFM0eGIwTjNpb3FDWU5NY2krbFVNU3ZDUk5MWHJjZG5VSWdhTXFHTFV5d2FCSDQ1Si9MNkgKMGpjdUxKVUNnWUVBL29WdmZYb1BOaUZrTXdTdGo1Mi9QRHRLUTJnZHJ2cnhvY3hVODBucmhMZEdkSG1FR21ldgprTmFlbTB2MnlrRm9UQTJTZnBxWVNrQU5SWm5uM3FXZzYzRzFFdVhNNENWajF0TGNRaWYwa29KanRJV0hNL1VhCjJTcmRPSjJXL05heDJVcDZ3S1lYZGpaRERXYm9vdkNFZUVWVk9KZ0NkYmFIUWJzOEE1T3RxenNDZ1lFQXlwWmEKOEQrMXJOSVdSdDh4VVlVZ1loaUNURWtPS2E3b3FMa3IxZlJPTVdRNTBMaWczV0ZTcDg4MGgrYW1mWHdyTDQ4VwpxVE8vdHlYelF3dTBxNFp5YktENHd1UXBSVkc0MGhhY1Vla3NqMHVHSWhFSTlrblhGSklwRFpBYmRnN3A0YW5nCnZjV3RpaXhLeXdyaG9GNVRjWnM3eFNRSmZ6dzlzdS84WEIyQ1IxOENnWUVBa1k3dU8reGFWckt5QXh0aHh3aUkKSFlJcTduSFV5QVZydXdTSWNMcU5udERSMGpyTWVlMWlVb3JyR2hWUGhrdnh3Y3poUXRaVzBkL2Z0elpWak5kYwpPRXBITEErUUk0QStvTlRtY2s4M1o3SjZJdnRhWHpTRnJqejlWeXVJOWdBeXBmb2FTYUt6T0QvQUNTSVpXVllECjdHUjZZR3RPdk5NdWQwRUZDV2FqbzVFQ2dZQmN5Y3J6R1NzYjhjbVVRbXZ6VzVjK2R0MVBGWEx3TXBXTG1leHkKL1lmRzVaSDVnR2JsbnNyZDQzQzdBakNsYnZiVXZLUHpjYWxRdUlnWDRFZXEvRlJ5WHJReGg1RkRsNitnUWd6dApFM0IrWFdnZE9GSXpoQlNIN24zeElWMENrTWdjdk5NYitHdUl5c3FpL3VQaXNQRmxLbVdRNFBXY21qbmtPRGtNCjg5TVUzd0tCZ1FDRUJRSkkrVURXeTRxVzg0MWdXTHdXc0RqQ04wZW5VeGd3ZGJsLzhiS2NBMGExYUM3NU5BK3AKRVlBbUdYUHJzZlVrcUFaNHQ1Mi96Tit2bi9xdEkxQTI0Q3IycnZRZm9iQldTYkNxTTlFclZtODB3bG1TelpERwoySWZuVzdVRHorSjYzcjVIaFFxYkpCVlBFUDV6QVRBN2tnOStKa2RMWFBuZEc3cjh5L2taa2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 22696128e4e5dfd730cd44480a37fa2e8704167c5090aac80c23b88eeb3b3830
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: valinor.hsn.dev
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.13.3@sha256:fa7003cbfdf8358cb71786afebc711b26e5e44a2ed99bd4944930bba915b8910
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: a4c11c105796c8a5e8451f33d969f886c4d337503c77935191bb7fabac98b35f
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.13.3@sha256:19e4aae5ff72cd9fbcb7d2d16a1570533320a478acc015fc91a4d41a177cadf6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: ca.crt
                      path: hubble-server-ca.crt
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  key: cni-chaining-mode
                  name: cilium-config
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  key: custom-cni-conf
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: valinor.hsn.dev
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - |
                    /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: valinor.hsn.dev
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: valinor.hsn.dev
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          secret:
            defaultMode: 256
            optional: true
            secretName: cilium-clustermesh
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
